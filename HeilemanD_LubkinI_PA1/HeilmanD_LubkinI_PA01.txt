ONE:

a) openat(AT_FDCWD, "myTstFile", O_RDWR)   = -1 ENOENT (No such file or directory)

This is the command that tries to open the file and returns a failed condition

b) write(x , x, x)

this is the most common command. it runs 204 times. 

c) fopen is not a system call because it is a part of the code. It is a c function.
It correlates with openat

d) print if is also not a system call because it is a c function. It correlates with write.


TWO:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 24.34    0.000266          16        16           write
 15.00    0.000164          11        14           mmap
  8.23    0.000090          12         7           ioctl
  7.59    0.000083          16         5           mprotect
  7.59    0.000083          11         7           openat
  7.41    0.000081          16         5         1 stat
  6.86    0.000075           8         9           fstat
  5.86    0.000064           9         7           close
  5.22    0.000057           9         6           read
  3.66    0.000040          40         1           munmap
  3.39    0.000037          12         4         2 access
  2.65    0.000029           9         3           brk
  1.10    0.000012          12         1           lseek
  1.10    0.000012           6         2         1 arch_prctl
  0.00    0.000000           0         6           pread64
  0.00    0.000000           0         1           execve
------ ----------- ----------- --------- --------- ----------------
100.00    0.001093                    93         4 total

Top 3 call functionality:
write: This call writes data from a buffer to a given device.

mmap: It maps files or devices to memory 

ioctl: This system call stands for "input/output control." It handles i/o operations that cannot be handled by regular system calls

THREE:
System Calls:
Open current directory: openat
Get list of directory enteries: getdents64
Print the output to the screen: write

Library Calls:
Open current directory: SYS_openat
Get list of directory enteries: SYS_getdents64
Print the output to the screen: SYS_write
